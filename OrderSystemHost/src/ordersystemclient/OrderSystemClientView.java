/*
 * OrderSystemServerView.java
 */
package ordersystemclient;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import ordersystemclient.model.HostModel;

/**
 * The application's main frame.
 */
public class OrderSystemClientView extends FrameView {

    private HostModel hostModel;
    private SingleFrameApplication app;

    public OrderSystemClientView(SingleFrameApplication app, HostModel clientModel) {
        super(app);
        this.hostModel = clientModel;
        this.app = app;
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }

                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);

                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = OrderSystemClientApp.getApplication().getMainFrame();
            aboutBox = new OrderSystemClientAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        OrderSystemClientApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        banner = new javax.swing.JLabel();
        banner_2 = new javax.swing.JLabel();
        face = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JPasswordField();
        managerButton = new javax.swing.JRadioButton();
        userButton = new javax.swing.JRadioButton();
        statusPanel = new javax.swing.JPanel();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        right = new javax.swing.ButtonGroup();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ordersystemclient.OrderSystemClientApp.class).getContext().getResourceMap(OrderSystemClientView.class);
        mainPanel.setBackground(resourceMap.getColor("mainPanel.background")); // NOI18N
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        banner.setIcon(resourceMap.getIcon("banner.icon")); // NOI18N
        banner.setText(resourceMap.getString("banner.text")); // NOI18N
        banner.setAlignmentY(0.0F);
        banner.setIconTextGap(0);
        banner.setName("banner"); // NOI18N
        mainPanel.add(banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        banner_2.setIcon(resourceMap.getIcon("banner_2.icon")); // NOI18N
        banner_2.setText(resourceMap.getString("banner_2.text")); // NOI18N
        banner_2.setName("banner_2"); // NOI18N
        mainPanel.add(banner_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 77, 350, 23));

        face.setIcon(resourceMap.getIcon("face.icon")); // NOI18N
        face.setText(resourceMap.getString("face.text")); // NOI18N
        face.setName("face"); // NOI18N
        mainPanel.add(face, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 100, 97));

        userNameLabel.setText(resourceMap.getString("userNameLabel.text")); // NOI18N
        userNameLabel.setName("userNameLabel"); // NOI18N
        mainPanel.add(userNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 50, 20));

        passwordLabel.setText(resourceMap.getString("passwordLabel.text")); // NOI18N
        passwordLabel.setName("passwordLabel"); // NOI18N
        mainPanel.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 48, 15));

        usernameText.setText(resourceMap.getString("usernameText.text")); // NOI18N
        usernameText.setName("usernameText"); // NOI18N
        mainPanel.add(usernameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 140, -1));

        passwordText.setText(resourceMap.getString("passwordText.text")); // NOI18N
        passwordText.setName("passwordText"); // NOI18N
        mainPanel.add(passwordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 145, 140, -1));

        managerButton.setBackground(resourceMap.getColor("managerButton.background")); // NOI18N
        right.add(managerButton);
        managerButton.setText(resourceMap.getString("managerButton.text")); // NOI18N
        managerButton.setName("managerButton"); // NOI18N
        mainPanel.add(managerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));

        userButton.setBackground(resourceMap.getColor("userButton.background")); // NOI18N
        right.add(userButton);
        userButton.setText(resourceMap.getString("userButton.text")); // NOI18N
        userButton.setName("userButton"); // NOI18N
        mainPanel.add(userButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        statusPanel.setBackground(resourceMap.getColor("statusPanel.background")); // NOI18N
        statusPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        statusPanel.setName("statusPanel"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        loginButton.setText(resourceMap.getString("loginButton.text")); // NOI18N
        loginButton.setName("loginButton"); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addComponent(statusMessageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                        .addComponent(statusAnimationLabel))
                    .addComponent(loginButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusMessageLabel)
                            .addComponent(statusAnimationLabel))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addContainerGap())))
        );

        setComponent(mainPanel);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        char[] inputPW = passwordText.getPassword();
        String password = new String(inputPW);
        String username = usernameText.getText();
        if (password.isEmpty() || username.isEmpty()) {
            JOptionPane.showMessageDialog(null, "You must enter your usename and password");
        } else if (hostModel.login(username, password)) {
            final OrderDishMainForm orderDishMainForm = new OrderDishMainForm(hostModel);
            hostModel.addObserver(orderDishMainForm);
            orderDishMainForm.setVisible(true);
            orderDishMainForm.setLocationRelativeTo(null);
            orderDishMainForm.setSize(956, 694);
            orderDishMainForm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            orderDishMainForm.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    System.out.println("Closing");
                    hostModel.deleteObserver(orderDishMainForm);
                    hostModel.stop();
                }
            });
//            JFrame test = new JFrame();
//            DishesView dishesView = new DishesView();
//            test.add(dishesView);
//            test.setVisible(true);
//            dishesView.setSize(200, 200);
            JFrame frame = app.getMainFrame();
            frame.dispose();
            hostModel.startInputThread();
        }

    }//GEN-LAST:event_loginButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel banner;
    private javax.swing.JLabel banner_2;
    private javax.swing.JLabel face;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton managerButton;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.ButtonGroup right;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JRadioButton userButton;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
}
